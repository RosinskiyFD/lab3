Задача 1
function counter(n) {
    for (let i = n; i >= 0; i--)
    {
        setTimeout(function()
        {
            console.log(i);
        }, 1000)
    }
}
let n = prompt("Введите число:");
counter(n);



Задача 2
function delay(n) {
    return new Promise((resolve) => {
        setTimeout(() => {
            console.log("Росинский Филипп Дмитриевич");
            resolve();
        }, n)
    });
}
let n = prompt("Введите время в миллисекундах:");
delay(n);

function delay(n) {
    return new Promise((resolve) => {
        for (let i = n; i >= 0; i--)
        {
            setTimeout(function()
            {
                console.log(i);
            }, 1000)
        }
    });
}
let n = prompt("Введите число:");
delay(n);

Задача 3
class HttpError extends Error {
  constructor(response) {
    super(`${response.status} for ${response.url}`);
    this.name = 'HttpError';
    this.response = response;
  }
}
async function loadJson(url) {
  let response = await fetch(url);
  if (response.status == 200) {
      return response.json();
  } else {
        throw new HttpError(response);
      }
}
async function getGithubUser() {
  let user;
  while(true) {
      let name = prompt("Введите логин?", "iliakan");
      try {
        user = await loadJson(`https://api.github.com/users/${name}`);
        break;
      }
      catch(err) {
          if (err instanceof HttpError && err.response.status == 404) {
            alert("Такого пользователя не существует, пожалуйста, повторите ввод.");
      } else {
        throw err;
      }
    }
  }
  alert(`Полное имя: ${user.name}.`);
  return user;
}
getGithubUser();